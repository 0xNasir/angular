load("//tools:defaults.bzl", "jasmine_node_test", "ts_library")
load(":zone_web_test.bzl", "karma_web_test", "karma_web_test_suite")

ts_library(
    name = "test_node_lib",
    testonly = True,
    srcs = glob(
        [
            "common/*.ts",
            "zone-spec/*.ts",
            "rxjs/*.ts",
            "node/*.ts",
            "test_fake_polyfill.ts",
            "test-util.ts",
            "wtf_mock.ts",
            "node-env-setup.ts",
            "node_entry_point_common.ts",
            "node_entry_point.ts",
            "node_entry_point_no_patch_clock.ts",
            "node_bluebird_entry_point.ts",
            "test-env-setup-jasmine.ts",
            "test-env-setup-jasmine-no-patch-clock.ts",
        ],
    ),
    deps = [
        "//packages/zone.js/lib",
        "@npm//shelljs",
        "@npm//systemjs",
        "@npm//@types/shelljs",
        "@npm//@types/systemjs",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "bluebird_spec",
    testonly = True,
    srcs = glob([
        "extra/bluebird.spec.ts",
        "node_bluebird_entry_point.ts",
        "test_fake_polyfill.ts",
        "wtf_mock.ts",
        "test-env-setup-jasmine.ts",
    ]),
    deps = [
        "//packages/zone.js/lib",
        "@npm//bluebird",
    ],
)

ts_library(
    name = "error_spec",
    testonly = True,
    srcs = glob([
        "common/Error.spec.ts",
        "test-util.ts",
        "node_error_entry_point.ts",
        "node_error_disable_policy_entry_point.ts",
        "node_error_lazy_policy_entry_point.ts",
        "test_fake_polyfill.ts",
        "wtf_mock.ts",
        "test-env-setup-jasmine.ts",
    ]),
    deps = [
        "//packages/zone.js/lib",
    ],
)

jasmine_node_test(
    name = "test_node",
    bootstrap = [
        "angular/packages/zone.js/test/node_entry_point.js",
    ],
    deps = [
        ":test_node_lib",
    ],
)

jasmine_node_test(
    name = "test_node_no_jasmine_clock",
    bootstrap = [
        "angular/packages/zone.js/test/node_entry_point_no_patch_clock.js",
    ],
    deps = [
        ":test_node_lib",
    ],
)

jasmine_node_test(
    name = "test_node_bluebird",
    bootstrap = [
        "angular/packages/zone.js/test/node_bluebird_entry_point.js",
    ],
    deps = [
        ":bluebird_spec",
    ],
)

jasmine_node_test(
    name = "test_node_error_disable_policy",
    bootstrap = [
        "angular/packages/zone.js/test/node_error_disable_policy_entry_point.js",
    ],
    deps = [
        ":error_spec",
    ],
)

jasmine_node_test(
    name = "test_node_error_lazy_policy",
    bootstrap = [
        "angular/packages/zone.js/test/node_error_lazy_policy_entry_point.js",
    ],
    deps = [
        ":error_spec",
    ],
)

ts_library(
    name = "npm_package_spec_lib",
    testonly = True,
    srcs = ["npm_package/npm_package.spec.ts"],
    deps = [
        "@npm//@types",
    ],
)

jasmine_node_test(
    name = "test_npm_package",
    srcs = [":npm_package_spec_lib"],
    data = [
        "//packages/zone.js:npm_package",
        "@npm//shelljs",
    ],
)

ts_library(
    name = "test_browser_lib",
    testonly = True,
    srcs = glob(
        [
            "common/*.ts",
            "zone-spec/*.ts",
            "rxjs/*.ts",
            "browser/*.ts",
            "extra/cordova.spec.ts",
            "mocha-patch.spec.ts",
            "jasmine-patch.spec.ts",
            "test_fake_polyfill.ts",
            "common_tests.ts",
            "test-util.ts",
            "wtf_mock.ts",
            "browser-env-setup.ts",
            "test-env-setup-jasmine.ts",
            "main.ts",
        ],
    ),
    deps = [
        "//packages/zone.js/lib",
        "@npm//shelljs",
        "@npm//systemjs",
        "@npm//@types/shelljs",
        "@npm//@types/systemjs",
        "@npm//rxjs",
    ],
)

karma_web_test(
    name = "karma_jasmine_test",
    deps = [
        ":test_browser_lib",
    ],
)
